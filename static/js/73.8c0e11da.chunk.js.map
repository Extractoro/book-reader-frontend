{"version":3,"file":"static/js/73.8c0e11da.chunk.js","mappings":"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","sources":["webpack://book-reader-frontend/./src/js/pages/Register/Register.module.css?c47f","sprites/mobileinfo-sprite.svg","js/pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__YAyos\",\"input\":\"Register_input__KvTp4\",\"label\":\"Register_label__Yu1h6\",\"button\":\"Register_button__2JrOV\",\"google\":\"Register_google__eob6E\",\"google_icon\":\"Register_google_icon__6Jtxa\",\"linkGoogle\":\"Register_linkGoogle__+uVNZ\",\"wrapper\":\"Register_wrapper__7vTzj\",\"overlay\":\"Register_overlay__QEiUC\",\"register\":\"Register_register__ljcg7\",\"background\":\"Register_background__gLmb+\",\"text\":\"Register_text__mXDLK\",\"linkLogin\":\"Register_linkLogin__My7gt\",\"title\":\"Register_title__XnVem\",\"titlesecond\":\"Register_titlesecond__Vm3PX\",\"infoList\":\"Register_infoList__FYe4L\",\"vector\":\"Register_vector__wwCbd\",\"infoWrapper\":\"Register_infoWrapper__1vpJ9\"};","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMobileinfoSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-Vector\",\n    viewBox: \"0 0 16 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff6b08\",\n    d: \"M15.662 15.122l-13.703-14.76c-0.449-0.483-1.176-0.482-1.624 0.003s-0.447 1.27 0.002 1.754l12.887 13.881-12.888 13.881c-0.449 0.484-0.45 1.269-0.002 1.754 0.225 0.243 0.519 0.365 0.813 0.365s0.587-0.121 0.811-0.362l13.703-14.76c0.216-0.232 0.338-0.549 0.338-0.878s-0.122-0.645-0.338-0.878z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMobileinfoSprite);\nexport default __webpack_public_path__ + \"static/media/mobileinfo-sprite.d1de0558ddb859dddd7fc6ed8067009c.svg\";\nexport { ForwardRef as ReactComponent };","import { useRegistrationUserMutation } from 'js/redux/auth/authApi';\nimport { useState } from 'react';\nimport s from './Register.module.css';\nimport { NavLink } from 'react-router-dom';\nimport googleIcon from 'images/google/google icon.png';\nimport sprite from '../../../sprites/mobileinfo-sprite.svg';\nimport { Notify } from 'notiflix';\n\nexport default function RegisterPage() {\n  const [register] = useRegistrationUserMutation();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'repeatPassword':\n        setRepeatPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onMessage = () => {\n    if (\n      name.length > 0 &&\n      email.length > 0 &&\n      password.length > 0 &&\n      repeatPassword.length > 0\n    ) {\n      Notify.success('Ви зареєструвалися. Теперь залогінтесь');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    register({ name, email, password, repeatPassword });\n    formFieldsReset();\n  };\n\n  const formFieldsReset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n    setRepeatPassword('');\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.overlay}>\n        <div className={s.background}>\n          <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n            <button className={s.google}>\n              <img\n                src={googleIcon}\n                alt=\"google-icon\"\n                className={s.google_icon}\n              />\n              <NavLink to=\"/#\" className={s.linkGoogle}>\n                Google\n              </NavLink>\n            </button>\n            <label className={s.label}>\n              Ім’я\n              <input\n                className={s.input}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                required\n                placeholder=\"Ім’я\"\n              />\n            </label>\n            <label className={s.label}>\n              Електронна адреса\n              <input\n                className={s.input}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                required\n                placeholder=\"email@email.com\"\n              />\n            </label>\n\n            <label className={s.label}>\n              Пароль\n              <input\n                className={s.input}\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                required\n                placeholder=\"*********\"\n              />\n            </label>\n\n            <label className={s.label}>\n              Підтвердити пароль\n              <input\n                className={s.input}\n                type=\"password\"\n                name=\"repeatPassword\"\n                value={repeatPassword}\n                onChange={handleChange}\n                required\n                placeholder=\"*********\"\n              />\n            </label>\n            <button\n              className={s.button}\n              type=\"submit\"\n              onClick={() => onMessage()}\n            >\n              Зареєструватися\n            </button>\n            <p className={s.text}>\n              Ви вже з нами?\n              <NavLink to=\"/login\" className={s.linkLogin}>\n                Увійти\n              </NavLink>\n            </p>\n          </form>\n        </div>\n      </div>\n      <div className={s.infoWrapper}>\n        <h2 className={s.title}>Books Reading</h2>\n        <p className={s.titlesecond}>Допоможе вам: </p>\n        <ul className={s.infoList}>\n          <li className={s.text}>\n            <svg className={s.vector} width=\"4\" height=\"8\">\n              <use href={sprite + '#icon-Vector'}></use>\n            </svg>\n            Швидше сформулювати свою ціль і розпочати читати\n          </li>\n          <li className={s.text}>\n            <svg className={s.vector} width=\"4\" height=\"8\">\n              <use href={sprite + '#icon-Vector'}></use>\n            </svg>\n            Пропорційно розподілити навантаження на кожний день\n          </li>\n          <li className={s.text}>\n            <svg className={s.vector} width=\"4\" height=\"8\">\n              <use href={sprite + '#icon-Vector'}></use>\n            </svg>\n            Відстежувати особистий успіх\n          </li>\n        </ul>\n        <p className={s.titlesecond}>Також ви зможете:</p>\n        <ul className={s.infoList}>\n          <li className={s.text}>\n            <svg className={s.vector} width=\"4\" height=\"8\">\n              <use href={sprite + '#icon-Vector'}></use>\n            </svg>\n            Формувати особисту думку незалежну від інших\n          </li>\n          <li className={s.text}>\n            <svg className={s.vector} width=\"4\" height=\"8\">\n              <use href={sprite + '#icon-Vector'}></use>\n            </svg>\n            Підвищити свої професійні якості опираючись на нові знання\n          </li>\n          <li className={s.text}>\n            <svg className={s.vector} width=\"4\" height=\"8\">\n              <use href={sprite + '#icon-Vector'}></use>\n            </svg>\n            Стати цікавим співрозмовником\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"names":["RegisterPage","useRegistrationUserMutation","register","useState","name","setName","email","setEmail","password","setPassword","repeatPassword","setRepeatPassword","handleChange","event","currentTarget","value","formFieldsReset","className","s","onSubmit","preventDefault","autoComplete","src","googleIcon","alt","to","type","onChange","required","placeholder","onClick","length","Notify","width","height","href","sprite"],"sourceRoot":""}